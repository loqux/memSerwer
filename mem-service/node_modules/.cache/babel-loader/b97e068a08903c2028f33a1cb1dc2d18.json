{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from 'react-router-dom';\nimport MemsPage from \"./MemsPage\";\n\nconst MemsList = props => {\n  useEffect(() => {\n    props.memsFetched();\n  }, []);\n\n  const handleUpvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    console.log(\"Upvote\", newMem);\n    newMem.upvotes = newMem.upvotes + 1;\n    console.log(\"Upvote\", newMem);\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n  if (useLocation().pathname === \"/hot\") {\n    return /*#__PURE__*/React.createElement(MemsPage, {\n      mems: props.mems.hots,\n      handleUpvoteMem: handleUpvoteMem,\n      handleDownvoteMem: handleDownvoteMem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(MemsPage, {\n    mems: props.mems.regulars,\n    handleUpvoteMem: handleUpvoteMem,\n    handleDownvoteMem: handleDownvoteMem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 2\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  console.log(\"mapStateToPorps\", state);\n  return {\n    mems: state.mems\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  memsFetched,\n  updateMem //   filterHot,\n  //   filterRegular,\n\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","useEffect","connect","withRouter","memsFetched","updateMem","bindActionCreators","useLocation","MemsPage","MemsList","props","handleUpvoteMem","mem","newMem","console","log","upvotes","handleDownvoteMem","downvotes","pathname","mems","hots","regulars","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,6BAAvC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1BT,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAACN,WAAN;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMO,eAAe,GAAG,MAAOC,GAAP,IAAe;AACrC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,MAArB;AACAA,IAAAA,MAAM,CAACG,OAAP,GAAiBH,MAAM,CAACG,OAAP,GAAiB,CAAlC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,MAArB;AACA,UAAMH,KAAK,CAACL,SAAN,CAAgBQ,MAAhB,CAAN;AACD,GAND;;AAQA,QAAMI,iBAAiB,GAAG,MAAOL,GAAP,IAAe;AACvC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACK,SAAP,GAAmBL,MAAM,CAACK,SAAP,GAAmB,CAAtC;AACA,UAAMR,KAAK,CAACL,SAAN,CAAgBQ,MAAhB,CAAN;AACD,GAJD;;AAMA,MAAGN,WAAW,GAAGY,QAAd,KAA2B,MAA9B,EAAqC;AACjC,wBAEA,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAET,KAAK,CAACU,IAAN,CAAWC,IAA3B;AAAiC,MAAA,eAAe,EAAEV,eAAlD;AAAoE,MAAA,iBAAiB,EAAEM,iBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA;AAGE;;AACP,sBAEA,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEP,KAAK,CAACU,IAAN,CAAWE,QAA3B;AAAqC,IAAA,eAAe,EAAEX,eAAtD;AAAwE,IAAA,iBAAiB,EAAEM,iBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA;AAKA,CA9BD;;AAgCA,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/BV,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BS,KAA/B;AACF,SAAO;AACLJ,IAAAA,IAAI,EAAEI,KAAK,CAACJ;AADP,GAAP;AAGD,CALD;;AAOA,MAAMK,kBAAkB,GAAIC,QAAD,IACzBpB,kBAAkB,CAChB;AACEF,EAAAA,WADF;AAEEC,EAAAA,SAFF,CAGA;AACA;;AAJA,CADgB,EAOhBqB,QAPgB,CADpB;;AAWA,eAAexB,OAAO,CACpBqB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbtB,UAAU,CAACM,QAAD,CAHG,CAAf","sourcesContent":["import React, {  useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from 'react-router-dom';\nimport MemsPage from \"./MemsPage\";\n\nconst MemsList = (props) => {\n\n  useEffect(() => {\n    props.memsFetched();\n  }, []);\n\n  const handleUpvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    console.log(\"Upvote\",newMem)\n    newMem.upvotes = newMem.upvotes + 1;\n    console.log(\"Upvote\",newMem)\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n  if(useLocation().pathname === \"/hot\"){\n      return(\n          \n      <MemsPage mems={props.mems.hots} handleUpvoteMem={handleUpvoteMem}  handleDownvoteMem={handleDownvoteMem}/>\n      )}\n return( \n   \n <MemsPage mems={props.mems.regulars} handleUpvoteMem={handleUpvoteMem}  handleDownvoteMem={handleDownvoteMem}/>\n    ) \n   \n};\n\nconst mapStateToProps = (state) => {\n    console.log(\"mapStateToPorps\", state);\n  return {\n    mems: state.mems,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      memsFetched,\n      updateMem,\n    //   filterHot,\n    //   filterRegular,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(MemsList));\n"]},"metadata":{},"sourceType":"module"}