{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem, filterHot, filterRegular } from \"../redux/actions/memActions\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from 'react-router-dom';\nimport MemsPage from \"./MemsPage\";\n\nconst MemsList = props => {\n  useEffect(() => {\n    const fetched = props.memsFetched();\n    props.filterHot(props.mems);\n    props.filterRegular(props.mems);\n  }, []);\n\n  const handleUpvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.upvotes = newMem.upvotes + 1;\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n  if (useLocation().pathname == \"/hot\") {\n    return console.log(\"MEMS\", props.hots), /*#__PURE__*/React.createElement(MemsPage, {\n      mems: props.hots,\n      handleUpvoteMem: handleUpvoteMem,\n      handleDownvoteMem: handleDownvoteMem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(MemsPage, {\n    mems: props.mems,\n    handleUpvoteMem: handleUpvoteMem,\n    handleDownvoteMem: handleDownvoteMem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    mems: state.mems,\n    hots: state.hots,\n    regulars: state.regulars\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  memsFetched,\n  updateMem,\n  filterHot,\n  filterRegular\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","useEffect","connect","withRouter","memsFetched","updateMem","filterHot","filterRegular","bindActionCreators","useLocation","MemsPage","MemsList","props","fetched","mems","handleUpvoteMem","mem","newMem","upvotes","handleDownvoteMem","downvotes","pathname","console","log","hots","mapStateToProps","state","regulars","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,SAAjC,EAA4CC,aAA5C,QAAiE,6BAAjE;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1BX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,OAAO,GAAGD,KAAK,CAACR,WAAN,EAAhB;AACAQ,IAAAA,KAAK,CAACN,SAAN,CAAgBM,KAAK,CAACE,IAAtB;AACAF,IAAAA,KAAK,CAACL,aAAN,CAAoBK,KAAK,CAACE,IAA1B;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,eAAe,GAAG,MAAOC,GAAP,IAAe;AACrC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACC,OAAP,GAAiB,CAAlC;AACA,UAAMN,KAAK,CAACP,SAAN,CAAgBY,MAAhB,CAAN;AACD,GAJD;;AAMA,QAAME,iBAAiB,GAAG,MAAOH,GAAP,IAAe;AACvC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACG,SAAP,GAAmBH,MAAM,CAACG,SAAP,GAAmB,CAAtC;AACA,UAAMR,KAAK,CAACP,SAAN,CAAgBY,MAAhB,CAAN;AACD,GAJD;;AAMA,MAAGR,WAAW,GAAGY,QAAd,IAA0B,MAA7B,EAAoC;AAChC,WACEC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBX,KAAK,CAACY,IAAzB,gBACF,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEZ,KAAK,CAACY,IAAtB;AAA4B,MAAA,eAAe,EAAET,eAA7C;AAA+D,MAAA,iBAAiB,EAAEI,iBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA;AAGE;;AACP,sBAAQ,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEP,KAAK,CAACE,IAAtB;AAA4B,IAAA,eAAe,EAAEC,eAA7C;AAA+D,IAAA,iBAAiB,EAAEI,iBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AAGA,CA5BD;;AA8BA,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLZ,IAAAA,IAAI,EAAEY,KAAK,CAACZ,IADP;AAELU,IAAAA,IAAI,EAAEE,KAAK,CAACF,IAFP;AAGLG,IAAAA,QAAQ,EAAED,KAAK,CAACC;AAHX,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IACzBrB,kBAAkB,CAChB;AACEJ,EAAAA,WADF;AAEEC,EAAAA,SAFF;AAGEC,EAAAA,SAHF;AAIEC,EAAAA;AAJF,CADgB,EAOhBsB,QAPgB,CADpB;;AAWA,eAAe3B,OAAO,CACpBuB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbzB,UAAU,CAACQ,QAAD,CAHG,CAAf","sourcesContent":["import React, {  useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem, filterHot, filterRegular } from \"../redux/actions/memActions\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from 'react-router-dom';\nimport MemsPage from \"./MemsPage\";\n\nconst MemsList = (props) => {\n\n  useEffect(() => {\n    const fetched = props.memsFetched();\n    props.filterHot(props.mems);\n    props.filterRegular(props.mems);\n  }, []);\n\n  const handleUpvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.upvotes = newMem.upvotes + 1;\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n  if(useLocation().pathname == \"/hot\"){\n      return(\n        console.log(\"MEMS\",props.hots),\n      <MemsPage mems={props.hots} handleUpvoteMem={handleUpvoteMem}  handleDownvoteMem={handleDownvoteMem}/>\n      )}\n return( <MemsPage mems={props.mems} handleUpvoteMem={handleUpvoteMem}  handleDownvoteMem={handleDownvoteMem}/>\n    ) \n   \n};\n\nconst mapStateToProps = (state) => {\n  return {\n    mems: state.mems,\n    hots: state.hots,\n    regulars: state.regulars\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      memsFetched,\n      updateMem,\n      filterHot,\n      filterRegular,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(MemsList));\n"]},"metadata":{},"sourceType":"module"}