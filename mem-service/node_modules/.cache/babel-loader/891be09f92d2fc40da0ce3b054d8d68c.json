{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\Mem.js\";\nimport React from \"react\";\nimport { Card, CardContent, Typography, CardActions, Button, Grid, IconButton, Popover } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ArrowUpwardRounded, ArrowDownwardRounded, Star } from \"@material-ui/icons\";\nimport styles from \"./Mem.module.css\";\n\nconst Mem = ({\n  mem,\n  onUpvoteClick,\n  onDownvoteClick,\n  onMarkStar\n}) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  return /*#__PURE__*/React.createElement(Card, {\n    className: styles.memCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, mem.title), /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.memImg,\n    src: mem.img,\n    alt: mem.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    align: \"center\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 2,\n    onMouseEnter: handlePopoverOpen,\n    onMouseLeave: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => onMarkStar(mem),\n    color: mem.star ? \"primary\" : \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Star, {\n    style: {\n      fontSize: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Popover, {\n    id: \"mouse-over-popover\",\n    classes: {\n      paper: classes.paper\n    },\n    open: open,\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    onClose: handlePopoverClose,\n    disableRestoreFocus: true,\n    style: {\n      pointerEvents: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Add to favorite\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: styles.voteButton,\n    onClick: () => onUpvoteClick(mem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowUpwardRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), mem.upvotes)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.voteButton,\n    variant: \"contained\",\n    onClick: () => onDownvoteClick(mem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDownwardRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }), mem.downvotes)))));\n};\n\nexport default Mem;","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/Mem.js"],"names":["React","Card","CardContent","Typography","CardActions","Button","Grid","IconButton","Popover","makeStyles","ArrowUpwardRounded","ArrowDownwardRounded","Star","styles","Mem","mem","onUpvoteClick","onDownvoteClick","onMarkStar","classes","useStyles","anchorEl","setAnchorEl","useState","handlePopoverOpen","event","currentTarget","handlePopoverClose","open","Boolean","memCard","title","memImg","img","star","fontSize","paper","vertical","horizontal","pointerEvents","voteButton","upvotes","downvotes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  Grid,\n  IconButton,\n  Popover,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  ArrowUpwardRounded,\n  ArrowDownwardRounded,\n  Star,\n} from \"@material-ui/icons\";\nimport styles from \"./Mem.module.css\";\n\n\n\nconst Mem = ({ mem, onUpvoteClick, onDownvoteClick, onMarkStar }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <Card className={styles.memCard}>\n      <CardContent>\n        <Typography variant=\"h4\">{mem.title}</Typography>\n        <img\n          className={styles.memImg}\n          src={mem.img}\n          alt={mem.title}\n        />\n      </CardContent>\n      <CardActions >\n        <Grid container align=\"center\" justify=\"center\" alignItems=\"center\">\n          <Grid\n            item\n            sm={2}\n            onMouseEnter={handlePopoverOpen}\n            onMouseLeave={handlePopoverClose}\n          >\n            <IconButton\n              onClick={() => onMarkStar(mem)}\n              color={mem.star ? \"primary\" : \"default\"}\n            >\n              <Star style={{ fontSize: 50 }} />\n            </IconButton>\n            <Popover\n              id=\"mouse-over-popover\"\n              classes={{\n                paper: classes.paper,\n              }}\n              open={open}\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              onClose={handlePopoverClose}\n              disableRestoreFocus\n              style={{pointerEvents: 'none'}}\n            >\n              <Typography>Add to favorite</Typography>\n            </Popover>\n          </Grid>\n          <Grid item sm={5}>\n            <Button\n              variant=\"contained\"\n              className={styles.voteButton}\n              onClick={() => onUpvoteClick(mem)}\n            >\n              <ArrowUpwardRounded />\n              {mem.upvotes}\n            </Button>\n          </Grid>\n          <Grid item sm={5}>\n            <Button\n            className={styles.voteButton}\n              variant=\"contained\"\n              onClick={() => onDownvoteClick(mem)}\n            >\n              <ArrowDownwardRounded />\n              {mem.downvotes}\n            </Button>\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Mem;\n"]},"metadata":{},"sourceType":"module"}