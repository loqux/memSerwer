{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from 'react-router-dom';\nimport MemsPage from \"./MemsPage\";\n\nconst MemsList = props => {\n  useEffect(() => {\n    props.memsFetched(); // console.log(\"Use effect hots\", props.mems);\n    // props.filterHot(props.mems);\n  }, []); //   useEffect((props) => {\n  //     console.log(\"Use effect regular\", props.mems);\n  //     props.filterRegular(props.mems);\n  //   }, [])\n  //   useEffect(() => {\n  //     console.log(\"Use effect hots\", props.mems);\n  //     props.filterHot(props.mems);\n  //   }, [])\n\n  const handleUpvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.upvotes = newMem.upvotes + 1;\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  }; //   if(useLocation().pathname === \"/hot\"){\n  //       return(\n  //         // filterHot(props.mems),\n  //         console.log(props.mems),\n  //       <MemsPage mems={props.hots} handleUpvoteMem={handleUpvoteMem}  handleDownvoteMem={handleDownvoteMem}/>\n  //       )}\n\n\n  return (\n    /*#__PURE__*/\n    //  props.filterHot(props.mems),\n    // console.log(\"return hot\", props.hots),\n    React.createElement(MemsPage, {\n      mems: props.mems.regulars,\n      handleUpvoteMem: handleUpvoteMem,\n      handleDownvoteMem: handleDownvoteMem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 2\n      }\n    })\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(\"mapStateToPorps\", state);\n  return {\n    mems: state.mems // hots: state.filter.hots,\n    // regulars: state.regulars,\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  memsFetched,\n  updateMem //   filterHot,\n  //   filterRegular,\n\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","useEffect","connect","withRouter","memsFetched","updateMem","bindActionCreators","useLocation","MemsPage","MemsList","props","handleUpvoteMem","mem","newMem","upvotes","handleDownvoteMem","downvotes","mems","regulars","mapStateToProps","state","console","log","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,6BAAvC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1BT,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAACN,WAAN,GADc,CAEd;AACA;AACD,GAJQ,EAIN,EAJM,CAAT,CAF0B,CAQ5B;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEE,QAAMO,eAAe,GAAG,MAAOC,GAAP,IAAe;AACrC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACC,OAAP,GAAiB,CAAlC;AACA,UAAMJ,KAAK,CAACL,SAAN,CAAgBQ,MAAhB,CAAN;AACD,GAJD;;AAMA,QAAME,iBAAiB,GAAG,MAAOH,GAAP,IAAe;AACvC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACG,SAAP,GAAmBH,MAAM,CAACG,SAAP,GAAmB,CAAtC;AACA,UAAMN,KAAK,CAACL,SAAN,CAAgBQ,MAAhB,CAAN;AACD,GAJD,CAzB0B,CA+B5B;AACA;AAEA;AACA;AACA;AACA;;;AACC;AAAA;AACG;AACA;AACH,wBAAC,QAAD;AAAU,MAAA,IAAI,EAAEH,KAAK,CAACO,IAAN,CAAWC,QAA3B;AAAqC,MAAA,eAAe,EAAEP,eAAtD;AAAwE,MAAA,iBAAiB,EAAEI,iBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA,CA5CD;;AA8CA,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACF,SAAO;AACLH,IAAAA,IAAI,EAAEG,KAAK,CAACH,IADP,CAEL;AACA;;AAHK,GAAP;AAKD,CAPD;;AASA,MAAMM,kBAAkB,GAAIC,QAAD,IACzBlB,kBAAkB,CAChB;AACEF,EAAAA,WADF;AAEEC,EAAAA,SAFF,CAGA;AACA;;AAJA,CADgB,EAOhBmB,QAPgB,CADpB;;AAWA,eAAetB,OAAO,CACpBiB,eADoB,EAEpBI,kBAFoB,CAAP,CAGbpB,UAAU,CAACM,QAAD,CAHG,CAAf","sourcesContent":["import React, {  useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from 'react-router-dom';\nimport MemsPage from \"./MemsPage\";\n\nconst MemsList = (props) => {\n\n  useEffect(() => {\n    props.memsFetched();\n    // console.log(\"Use effect hots\", props.mems);\n    // props.filterHot(props.mems);\n  }, []);\n\n//   useEffect((props) => {\n//     console.log(\"Use effect regular\", props.mems);\n//     props.filterRegular(props.mems);\n//   }, [])\n\n//   useEffect(() => {\n//     console.log(\"Use effect hots\", props.mems);\n\n//     props.filterHot(props.mems);\n//   }, [])\n\n  const handleUpvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.upvotes = newMem.upvotes + 1;\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n//   if(useLocation().pathname === \"/hot\"){\n//       return(\n          \n//         // filterHot(props.mems),\n//         console.log(props.mems),\n//       <MemsPage mems={props.hots} handleUpvoteMem={handleUpvoteMem}  handleDownvoteMem={handleDownvoteMem}/>\n//       )}\n return( \n    //  props.filterHot(props.mems),\n    // console.log(\"return hot\", props.hots),\n <MemsPage mems={props.mems.regulars} handleUpvoteMem={handleUpvoteMem}  handleDownvoteMem={handleDownvoteMem}/>\n    ) \n   \n};\n\nconst mapStateToProps = (state) => {\n    console.log(\"mapStateToPorps\", state);\n  return {\n    mems: state.mems,\n    // hots: state.filter.hots,\n    // regulars: state.regulars,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      memsFetched,\n      updateMem,\n    //   filterHot,\n    //   filterRegular,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(MemsList));\n"]},"metadata":{},"sourceType":"module"}