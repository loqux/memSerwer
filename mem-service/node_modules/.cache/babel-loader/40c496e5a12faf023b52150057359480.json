{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { bindActionCreators } from \"redux\";\n\nclass MemsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleUpvoteMem = async mem => {\n      let newMem = { ...mem\n      };\n      newMem.upvotes = newMem.upvotes + 1;\n      await this.props.updateMem(newMem);\n    };\n\n    this.handleDownvoteMem = async mem => {\n      let newMem = { ...mem\n      };\n      newMem.downvotes = newMem.downvotes - 1;\n      await this.props.updateMem(newMem);\n    };\n  }\n\n  componentDidMount() {\n    const mems = this.props;\n    this.props.memsFetched(mems);\n    console.log(mems);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Leyout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      styles: {\n        padding: 20,\n        marginTop: 10,\n        marginBottom: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, this.props.mems.map(mem => /*#__PURE__*/React.createElement(Mem, {\n      key: mem.id,\n      mem: mem,\n      onUpvoteClick: this.handleUpvoteMem,\n      onDownvoteClick: this.handleDownvoteMem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    mems: state.mems\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  memsFetched,\n  updateMem\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","connect","Mem","withRouter","memsFetched","updateMem","Leyout","Paper","bindActionCreators","MemsList","Component","handleUpvoteMem","mem","newMem","upvotes","props","handleDownvoteMem","downvotes","componentDidMount","mems","console","log","render","padding","marginTop","marginBottom","map","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,6BAAvC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAGA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAOnCC,eAPmC,GAOjB,MAAOC,GAAP,IAAe;AAC7B,UAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,OAAb;AACAC,MAAAA,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACC,OAAP,GAAiB,CAAlC;AACA,YAAM,KAAKC,KAAL,CAAWV,SAAX,CAAqBQ,MAArB,CAAN;AACD,KAXgC;;AAAA,SAalCG,iBAbkC,GAad,MAAOJ,GAAP,IAAe;AAChC,UAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,OAAb;AACAC,MAAAA,MAAM,CAACI,SAAP,GAAmBJ,MAAM,CAACI,SAAP,GAAmB,CAAtC;AACA,YAAM,KAAKF,KAAL,CAAWV,SAAX,CAAqBQ,MAArB,CAAN;AACD,KAjBgC;AAAA;;AACnCK,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,IAAI,GAAG,KAAKJ,KAAlB;AACA,SAAKA,KAAL,CAAWX,WAAX,CAAuBe,IAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AAaDG,EAAAA,MAAM,GAAG;AACX,wBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,SAAS,EAAE,EAA1B;AAA8BC,QAAAA,YAAY,EAAE;AAA5C,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,KAAKV,KAAL,CAAWI,IAAX,CAAgBO,GAAhB,CAAqBd,GAAD,iBACnB,oBAAC,GAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAACe,EADX;AAEE,MAAA,GAAG,EAAEf,GAFP;AAGE,MAAA,aAAa,EAAE,KAAKD,eAHtB;AAIE,MAAA,eAAe,EAAE,KAAKK,iBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHH,CADA,CADJ;AAgBD;;AAnCoC;;AAqCrC,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLV,IAAAA,IAAI,EAAEU,KAAK,CAACV;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMW,kBAAkB,GAAGC,QAAD,IAAevB,kBAAkB,CACzD;AAAEJ,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CADyD,EAC9B0B,QAD8B,CAA3D;;AAIA,eAAe9B,OAAO,CAAC2B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3B,UAAU,CAACM,QAAD,CAAvD,CAAf","sourcesContent":["import React  from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Mem from \"./Mem\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\r\nimport Leyout from \"./Layouts/index\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\n\r\nclass MemsList extends React.Component {\r\n    componentDidMount() {\r\n        const mems = this.props;\r\n        this.props.memsFetched(mems);\r\n        console.log(mems);\r\n      }\r\n\r\n    handleUpvoteMem = async (mem) => {\r\n        let newMem = { ...mem };\r\n        newMem.upvotes = newMem.upvotes + 1;\r\n        await this.props.updateMem(newMem);\r\n      };\r\n    \r\n     handleDownvoteMem = async (mem) => {\r\n        let newMem = { ...mem };\r\n        newMem.downvotes = newMem.downvotes - 1;\r\n        await this.props.updateMem(newMem);\r\n      };\r\n      render() {\r\n    return (\r\n        <Leyout>\r\n        <Paper\r\n          styles={{ padding: 20, marginTop: 10, marginBottom: 10 }}\r\n        >\r\n          {this.props.mems.map((mem) => (\r\n            <Mem\r\n              key={mem.id}\r\n              mem={mem}\r\n              onUpvoteClick={this.handleUpvoteMem}\r\n              onDownvoteClick={this.handleDownvoteMem}\r\n            />\r\n          ))}\r\n        </Paper>\r\n      </Leyout>\r\n    );\r\n  }}\r\n  \r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      mems: state.mems,\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps =(dispatch )=>  bindActionCreators(\r\n    { memsFetched, updateMem },dispatch);\r\n  \r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));\r\n  "]},"metadata":{},"sourceType":"module"}