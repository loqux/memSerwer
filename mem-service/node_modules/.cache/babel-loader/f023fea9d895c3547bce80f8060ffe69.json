{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { bindActionCreators } from \"redux\";\n\nconst MemsList = () => {\n  const [mems, setMems] = useState([]);\n  const [hotMems, setHotMems] = useState([]);\n  useEffect(() => {\n    const fetched = memsFetched();\n    setMems(fetched);\n    setHotMems(fetched);\n  }, []);\n\n  const handleUpvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.upvotes = newMem.upvotes + 1;\n    await updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.downvotes = newMem.downvotes - 1;\n    await updateMem(newMem);\n  };\n\n  return /*#__PURE__*/React.createElement(Leyout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    styles: {\n      padding: 20,\n      marginTop: 10,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, this.props.mems.map(thismem => (console.log(thismem), /*#__PURE__*/React.createElement(Mem, {\n    key: thismem.id,\n    mem: thismem,\n    onUpvoteClick: handleUpvoteMem,\n    onDownvoteClick: handleDownvoteMem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    mems: state.mems\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    memsFetched: bindActionCreators({\n      memsFetched //   updateMem,\n\n    }, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","useState","useEffect","connect","Mem","withRouter","memsFetched","updateMem","Leyout","Paper","bindActionCreators","MemsList","mems","setMems","hotMems","setHotMems","fetched","handleUpvoteMem","mem","newMem","upvotes","handleDownvoteMem","downvotes","padding","marginTop","marginBottom","props","map","thismem","console","log","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,6BAAvC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAK,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,OAAO,GAAGV,WAAW,EAA3B;AACAO,IAAAA,OAAO,CAACG,OAAD,CAAP;AACAD,IAAAA,UAAU,CAACC,OAAD,CAAV;AAED,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,eAAe,GAAG,MAAOC,GAAP,IAAe;AACrC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACC,OAAP,GAAiB,CAAlC;AACA,UAAMb,SAAS,CAACY,MAAD,CAAf;AACD,GAJD;;AAMA,QAAME,iBAAiB,GAAG,MAAOH,GAAP,IAAe;AACvC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACG,SAAP,GAAmBH,MAAM,CAACG,SAAP,GAAmB,CAAtC;AACA,UAAMf,SAAS,CAACY,MAAD,CAAf;AACD,GAJD;;AAMA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEI,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,EAA1B;AAA8BC,MAAAA,YAAY,EAAE;AAA5C,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,KAAKC,KAAL,CAAWd,IAAX,CAAgBe,GAAhB,CAAqBC,OAAD,KACjBC,OAAO,CAACC,GAAR,CAAYF,OAAZ,gBACF,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACG,EADf;AAEE,IAAA,GAAG,EAAEH,OAFP;AAGE,IAAA,aAAa,EAAEX,eAHjB;AAIE,IAAA,eAAe,EAAEI,iBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFmB,CAApB,CADH,CADF,CADF;AAeD,CAtCD;;AAwCA,MAAMW,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLrB,IAAAA,IAAI,EAAEqB,KAAK,CAACrB;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMsB,kBAAkB,GAAIC,QAAD,IAAa;AACpC,SAAM;AACV7B,IAAAA,WAAW,EAAEI,kBAAkB,CAC3B;AACEJ,MAAAA,WADF,CAEA;;AAFA,KAD2B,EAK3B6B,QAL2B;AADrB,GAAN;AAOC,CARL;;AAUA,eAAehC,OAAO,CACpB6B,eADoB,EAEpBE,kBAFoB,CAAP,CAGb7B,UAAU,CAACM,QAAD,CAHG,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { bindActionCreators } from \"redux\";\n\nconst MemsList = () => {\n  const [mems, setMems] = useState([]);\n  const[hotMems, setHotMems] = useState([]);\n\n  useEffect(() => {\n    const fetched = memsFetched();\n    setMems(fetched);\n    setHotMems(fetched);\n    \n  }, []);\n\n  const handleUpvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.upvotes = newMem.upvotes + 1;\n    await updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.downvotes = newMem.downvotes - 1;\n    await updateMem(newMem);\n  };\n\n  return (\n    <Leyout>\n      <Paper styles={{ padding: 20, marginTop: 10, marginBottom: 10 }}>\n        {this.props.mems.map((thismem) => (\n            console.log(thismem),\n          <Mem\n            key={thismem.id}\n            mem={thismem}\n            onUpvoteClick={handleUpvoteMem}\n            onDownvoteClick={handleDownvoteMem}\n          />\n        ))}\n      </Paper>\n    </Leyout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    mems: state.mems,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\nmemsFetched: bindActionCreators(\n    {\n      memsFetched,\n    //   updateMem,\n    },\n    dispatch\n  )}};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(MemsList));\n"]},"metadata":{},"sourceType":"module"}