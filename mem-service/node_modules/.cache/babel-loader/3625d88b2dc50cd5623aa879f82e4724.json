{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\AddMem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMem, memsFetched } from \"../redux/actions/actions\";\nimport MemForm from \"./MemForm\";\nimport { newMem } from \"../api/newMem\";\nimport { withRouter } from \"react-router-dom\";\nexport function AddMem({\n  mems,\n  addMem,\n  memsFetched,\n  ...props\n}) {\n  const [mem, setMem] = useState({ ...props.mem\n  });\n  useEffect(() => {\n    setMem({ ...props.mem\n    });\n  }, [props.mem]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCourse(prevMem => ({ ...prevMem,\n      [name]: value\n    }));\n  }\n\n  function handleSave(event) {\n    event.preventDefault();\n    console.log(mem);\n    addMem(mem);\n    props.history.push(\"/regular\");\n  }\n\n  return /*#__PURE__*/React.createElement(MemForm, {\n    mem: mem,\n    onChange: handleChange,\n    onSave: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const mem = newMem;\n  return {\n    mem,\n    mems: state.mems\n  };\n}\n\nconst mapDispatchToProps = {\n  addMem,\n  memsFetched\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AddMem));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/AddMem.js"],"names":["React","useEffect","useState","connect","addMem","memsFetched","MemForm","newMem","withRouter","AddMem","mems","props","mem","setMem","handleChange","event","name","value","target","setCourse","prevMem","handleSave","preventDefault","console","log","history","push","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,SAASC,MAAT,CAAgB;AAAEC,EAAAA,IAAF;AAAQN,EAAAA,MAAR;AAAgBC,EAAAA,WAAhB;AAA6B,KAAGM;AAAhC,CAAhB,EAAyD;AAC9D,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAE,GAAGS,KAAK,CAACC;AAAX,GAAD,CAA9B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,MAAM,CAAC,EAAE,GAAGF,KAAK,CAACC;AAAX,KAAD,CAAN;AACD,GAFQ,EAEN,CAACD,KAAK,CAACC,GAAP,CAFM,CAAT;;AAIA,WAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAC,IAAAA,SAAS,CAAEC,OAAD,KAAc,EACtB,GAAGA,OADmB;AAEtB,OAACJ,IAAD,GAAQC;AAFc,KAAd,CAAD,CAAT;AAID;;AAED,WAASI,UAAT,CAAoBN,KAApB,EAA2B;AACzBA,IAAAA,KAAK,CAACO,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACAR,IAAAA,MAAM,CAACQ,GAAD,CAAN;AACAD,IAAAA,KAAK,CAACc,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACD;;AAED,sBAAO,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEd,GAAd;AAAmB,IAAA,QAAQ,EAAEE,YAA7B;AAA2C,IAAA,MAAM,EAAEO,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,SAASM,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACxC,QAAMjB,GAAG,GAAGL,MAAZ;AACA,SAAO;AACLK,IAAAA,GADK;AAELF,IAAAA,IAAI,EAAEkB,KAAK,CAAClB;AAFP,GAAP;AAID;;AAED,MAAMoB,kBAAkB,GAAG;AACzB1B,EAAAA,MADyB;AAEzBC,EAAAA;AAFyB,CAA3B;AAKA,eAAeF,OAAO,CAACwB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,UAAU,CAACC,MAAD,CAAvD,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMem, memsFetched } from \"../redux/actions/actions\";\nimport MemForm from \"./MemForm\";\nimport { newMem } from \"../api/newMem\";\nimport { withRouter } from \"react-router-dom\";\n\nexport function AddMem({ mems, addMem, memsFetched, ...props }) {\n  const [mem, setMem] = useState({ ...props.mem });\n\n  useEffect(() => {\n    setMem({ ...props.mem });\n  }, [props.mem]);\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setCourse((prevMem) => ({\n      ...prevMem,\n      [name]: value,\n    }));\n  }\n\n  function handleSave(event) {\n    event.preventDefault();\n    console.log(mem);\n    addMem(mem);\n    props.history.push(\"/regular\");\n  }\n\n  return <MemForm mem={mem} onChange={handleChange} onSave={handleSave} />;\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const mem = newMem;\n  return {\n    mem,\n    mems: state.mems,\n  };\n}\n\nconst mapDispatchToProps = {\n  addMem,\n  memsFetched,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AddMem));\n"]},"metadata":{},"sourceType":"module"}