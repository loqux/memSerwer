{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/actions\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { bindActionCreators } from \"redux\";\n\nconst MemsList = props => {\n  const [mems, setMems] = useState([]);\n  useEffect(() => {\n    // console.log(\"Use effect\");\n    const fetched = props.memsFetched();\n    setMems(fetched);\n  }, []);\n\n  const handleUpvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.upvotes = newMem.upvotes + 1;\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n  return /*#__PURE__*/React.createElement(Leyout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    styles: {\n      padding: 20,\n      marginTop: 10,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, mems.map(mem => console.log(\"Mapuje tu po liście memów\", mem) //   <Mem\n  //     key={mem.id}\n  //     thisMem={mem}\n  //     onUpvoteClick={handleUpvoteMem}\n  //     onDownvoteClick={handleDownvoteMem}\n  //   />\n  )));\n};\n\nconst mapStateToProps = state => {\n  return {\n    mems: state.mems\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  memsFetched,\n  updateMem\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","useState","useEffect","connect","Mem","withRouter","memsFetched","updateMem","Leyout","Paper","bindActionCreators","MemsList","props","mems","setMems","fetched","handleUpvoteMem","mem","newMem","upvotes","handleDownvoteMem","downvotes","padding","marginTop","marginBottom","map","console","log","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,0BAAvC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMa,OAAO,GAAGH,KAAK,CAACN,WAAN,EAAhB;AACAQ,IAAAA,OAAO,CAACC,OAAD,CAAP;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,eAAe,GAAG,MAAOC,GAAP,IAAe;AACrC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACC,OAAP,GAAiB,CAAlC;AACA,UAAMP,KAAK,CAACL,SAAN,CAAgBW,MAAhB,CAAN;AACD,GAJD;;AAMA,QAAME,iBAAiB,GAAG,MAAOH,GAAP,IAAe;AACvC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACG,SAAP,GAAmBH,MAAM,CAACG,SAAP,GAAmB,CAAtC;AACA,UAAMT,KAAK,CAACL,SAAN,CAAgBW,MAAhB,CAAN;AACD,GAJD;;AAMA,sBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEI,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,EAA1B;AAA8BC,MAAAA,YAAY,EAAE;AAA5C,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,IAAI,CAACY,GAAL,CAAUR,GAAG,IACVS,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCV,GAAxC,CADU,CAId;AACA;AACA;AACA;AACA;AACA;AATC,GADH,CAFF,CAFF;AAmBD,CAxCD;;AA0CA,MAAMW,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLhB,IAAAA,IAAI,EAAEgB,KAAK,CAAChB;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMiB,kBAAkB,GAAIC,QAAD,IACzBrB,kBAAkB,CACd;AACIJ,EAAAA,WADJ;AAEIC,EAAAA;AAFJ,CADc,EAITwB,QAJS,CADpB;;AAOA,eAAe5B,OAAO,CACpByB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbzB,UAAU,CAACM,QAAD,CAHG,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/actions\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { bindActionCreators } from \"redux\";\n\nconst MemsList = (props) => {\n  const [mems, setMems] = useState([]);\n\n  useEffect(() => {\n    // console.log(\"Use effect\");\n    const fetched = props.memsFetched();\n    setMems(fetched);\n  }, []);\n\n  const handleUpvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.upvotes = newMem.upvotes + 1;\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n  return (\n      \n    <Leyout>\n          \n      <Paper styles={{ padding: 20, marginTop: 10, marginBottom: 10 }}>\n        {mems.map( mem => (\n            console.log(\"Mapuje tu po liście memów\",mem)\n           \n\n        //   <Mem\n        //     key={mem.id}\n        //     thisMem={mem}\n        //     onUpvoteClick={handleUpvoteMem}\n        //     onDownvoteClick={handleDownvoteMem}\n        //   />\n        ))}\n      </Paper>\n    </Leyout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    mems: state.mems,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n      { \n          memsFetched, \n          updateMem \n        }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(MemsList));\n"]},"metadata":{},"sourceType":"module"}