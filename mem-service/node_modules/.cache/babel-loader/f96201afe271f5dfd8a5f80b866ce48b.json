{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport memsReducer from \"../redux/reducer/memsReducer\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { bindActionCreators } from \"redux\";\n\nclass MemsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpvoteMem = async mem => {\n      let newMem = { ...mem\n      };\n      newMem.upvotes = newMem.upvotes + 1;\n      await this.props.updateMem(newMem);\n    };\n\n    this.handleDownvoteMem = async mem => {\n      let newMem = { ...mem\n      };\n      newMem.downvotes = newMem.downvotes - 1;\n      await this.props.updateMem(newMem);\n    };\n\n    this.state = {\n      mems: this.props.mems,\n      hots: this.props.hots\n    };\n  }\n\n  componentDidMount() {\n    this.props.memsFetched(mems);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Leyout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      styles: {\n        padding: 20,\n        marginTop: 10,\n        marginBottom: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, this.props.mems.map(mem => /*#__PURE__*/React.createElement(Mem, {\n      key: mem.id,\n      mem: mem,\n      onUpvoteClick: this.handleUpvoteMem,\n      onDownvoteClick: this.handleDownvoteMem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    mems: state.mems\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  memsFetched,\n  updateMem\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","connect","Mem","withRouter","memsReducer","memsFetched","updateMem","Leyout","Paper","bindActionCreators","MemsList","Component","constructor","props","handleUpvoteMem","mem","newMem","upvotes","handleDownvoteMem","downvotes","state","mems","hots","componentDidMount","render","padding","marginTop","marginBottom","map","id","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,6BAAvC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYjBC,eAZiB,GAYC,MAAOC,GAAP,IAAe;AAC/B,UAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,OAAb;AACAC,MAAAA,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACC,OAAP,GAAiB,CAAlC;AACA,YAAM,KAAKJ,KAAL,CAAWP,SAAX,CAAqBU,MAArB,CAAN;AACD,KAhBgB;;AAAA,SAkBjBE,iBAlBiB,GAkBG,MAAOH,GAAP,IAAe;AACjC,UAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,OAAb;AACAC,MAAAA,MAAM,CAACG,SAAP,GAAmBH,MAAM,CAACG,SAAP,GAAmB,CAAtC;AACA,YAAM,KAAKN,KAAL,CAAWP,SAAX,CAAqBU,MAArB,CAAN;AACD,KAtBgB;;AAEf,SAAKI,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWQ,IADR;AAETC,MAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWS;AAFR,KAAb;AAIG;;AAELC,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,KAAL,CAAWR,WAAX,CAAuBgB,IAAvB;AACD;;AAcDG,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,SAAS,EAAE,EAA1B;AAA8BC,QAAAA,YAAY,EAAE;AAA5C,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWQ,IAAX,CAAgBO,GAAhB,CAAqBb,GAAD,iBACnB,oBAAC,GAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAACc,EADX;AAEE,MAAA,GAAG,EAAEd,GAFP;AAGE,MAAA,aAAa,EAAE,KAAKD,eAHtB;AAIE,MAAA,eAAe,EAAE,KAAKI,iBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF,CADF;AAcD;;AAxCoC;;AA2CvC,MAAMY,eAAe,GAAIV,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMU,kBAAkB,GAAIC,QAAD,IACzBvB,kBAAkB,CAAC;AAAEJ,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,EAA6B0B,QAA7B,CADpB;;AAGA,eAAe/B,OAAO,CACpB6B,eADoB,EAEpBC,kBAFoB,CAAP,CAGb5B,UAAU,CAACO,QAAD,CAHG,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport memsReducer from \"../redux/reducer/memsReducer\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { bindActionCreators } from \"redux\";\n\nclass MemsList extends React.Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n        mems: this.props.mems,\n        hots: this.props.hots,\n        };\n      }\n\n  componentDidMount() {\n    this.props.memsFetched(mems);\n  }\n\n  handleUpvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.upvotes = newMem.upvotes + 1;\n    await this.props.updateMem(newMem);\n  };\n\n  handleDownvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.downvotes = newMem.downvotes - 1;\n    await this.props.updateMem(newMem);\n  };\n\n  render() {\n    return (\n      <Leyout>\n        <Paper styles={{ padding: 20, marginTop: 10, marginBottom: 10 }}>\n          {this.props.mems.map((mem) => (\n            <Mem\n              key={mem.id}\n              mem={mem}\n              onUpvoteClick={this.handleUpvoteMem}\n              onDownvoteClick={this.handleDownvoteMem}\n            />\n          ))}\n        </Paper>\n      </Leyout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    mems: state.mems,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ memsFetched, updateMem }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(MemsList));\n"]},"metadata":{},"sourceType":"module"}