{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { bindActionCreators } from \"redux\";\n\nconst MemsList = props => {\n  const [mems, setMems] = useState([]);\n  const [hots, setHots] = useState([]);\n  useEffect(() => {\n    const fetched = props.memsFetched();\n    filterMems();\n    console.log(mems);\n  }, []);\n\n  const filterMems = mems => {\n    setMems(props.mems.filter(mem => mem.upvotes + mem.downvotes < 6));\n    setHots(props.mems.filter(mem => mem.upvotes + mem.downvotes > 5));\n  };\n\n  const handleUpvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.upvotes = newMem.upvotes + 1;\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n  return /*#__PURE__*/React.createElement(Leyout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    styles: {\n      padding: 20,\n      marginTop: 10,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, props.hots.map(thismem => /*#__PURE__*/React.createElement(Mem, {\n    key: thismem.id,\n    mem: thismem,\n    onUpvoteClick: handleUpvoteMem,\n    onDownvoteClick: handleDownvoteMem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    mems: state.mems.filter(mem => mem.upvotes + mem.downvotes < 6),\n    hots: state.mems.filter(mem => mem.upvotes + mem.downvotes > 5)\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  memsFetched,\n  updateMem\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","useState","useEffect","connect","Mem","withRouter","memsFetched","updateMem","Leyout","Paper","bindActionCreators","MemsList","props","mems","setMems","hots","setHots","fetched","filterMems","console","log","filter","mem","upvotes","downvotes","handleUpvoteMem","newMem","handleDownvoteMem","padding","marginTop","marginBottom","map","thismem","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,6BAAvC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,OAAO,GAAGL,KAAK,CAACN,WAAN,EAAhB;AACAY,IAAAA,UAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMK,UAAU,GAAIL,IAAD,IAAS;AACxBC,IAAAA,OAAO,CAACF,KAAK,CAACC,IAAN,CAAWQ,MAAX,CAAmBC,GAAD,IAAQA,GAAG,CAACC,OAAJ,GAAcD,GAAG,CAACE,SAAlB,GAA8B,CAAxD,CAAD,CAAP;AACAR,IAAAA,OAAO,CAACJ,KAAK,CAACC,IAAN,CAAWQ,MAAX,CAAmBC,GAAD,IAAQA,GAAG,CAACC,OAAJ,GAAcD,GAAG,CAACE,SAAlB,GAA8B,CAAxD,CAAD,CAAP;AACH,GAHD;;AAKA,QAAMC,eAAe,GAAG,MAAOH,GAAP,IAAe;AACrC,QAAII,MAAM,GAAG,EAAE,GAAGJ;AAAL,KAAb;AACAI,IAAAA,MAAM,CAACH,OAAP,GAAiBG,MAAM,CAACH,OAAP,GAAiB,CAAlC;AACA,UAAMX,KAAK,CAACL,SAAN,CAAgBmB,MAAhB,CAAN;AACD,GAJD;;AAMA,QAAMC,iBAAiB,GAAG,MAAOL,GAAP,IAAe;AACvC,QAAII,MAAM,GAAG,EAAE,GAAGJ;AAAL,KAAb;AACAI,IAAAA,MAAM,CAACF,SAAP,GAAmBE,MAAM,CAACF,SAAP,GAAmB,CAAtC;AACA,UAAMZ,KAAK,CAACL,SAAN,CAAgBmB,MAAhB,CAAN;AACD,GAJD;;AAMA,sBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEE,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,EAA1B;AAA8BC,MAAAA,YAAY,EAAE;AAA5C,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,KAAK,CAACG,IAAN,CAAWgB,GAAX,CAAgBC,OAAD,iBACd,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,IAAA,GAAG,EAAED,OAFP;AAGE,IAAA,aAAa,EAAEP,eAHjB;AAIE,IAAA,eAAe,EAAEE,iBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CAFF;AAeD,CA1CD;;AA4CA,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLtB,IAAAA,IAAI,EAAEsB,KAAK,CAACtB,IAAN,CAAWQ,MAAX,CAAmBC,GAAD,IAAQA,GAAG,CAACC,OAAJ,GAAcD,GAAG,CAACE,SAAlB,GAA8B,CAAxD,CADD;AAELT,IAAAA,IAAI,EAAEoB,KAAK,CAACtB,IAAN,CAAWQ,MAAX,CAAmBC,GAAD,IAAQA,GAAG,CAACC,OAAJ,GAAcD,GAAG,CAACE,SAAlB,GAA8B,CAAxD;AAFD,GAAP;AAID,CALD;;AAOA,MAAMY,kBAAkB,GAAIC,QAAD,IACzB3B,kBAAkB,CAChB;AACEJ,EAAAA,WADF;AAEEC,EAAAA;AAFF,CADgB,EAKhB8B,QALgB,CADpB;;AASA,eAAelC,OAAO,CACpB+B,eADoB,EAEpBE,kBAFoB,CAAP,CAGb/B,UAAU,CAACM,QAAD,CAHG,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { bindActionCreators } from \"redux\";\n\nconst MemsList = (props) => {\n  const [mems, setMems] = useState([]);\n  const [hots, setHots] = useState([]);\n\n  useEffect(() => {\n    const fetched = props.memsFetched();\n    filterMems();\n    console.log(mems);\n  }, []);\n\n  const filterMems = (mems) =>{\n      setMems(props.mems.filter((mem)=> mem.upvotes + mem.downvotes < 6));\n      setHots(props.mems.filter((mem)=> mem.upvotes + mem.downvotes > 5));\n  }\n\n  const handleUpvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.upvotes = newMem.upvotes + 1;\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n  return (\n   \n    <Leyout>\n      <Paper styles={{ padding: 20, marginTop: 10, marginBottom: 10 }}>\n        {props.hots.map((thismem) => (\n          <Mem\n            key={thismem.id}\n            mem={thismem}\n            onUpvoteClick={handleUpvoteMem}\n            onDownvoteClick={handleDownvoteMem}\n          />\n        ))}\n      </Paper>\n    </Leyout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    mems: state.mems.filter((mem)=> mem.upvotes + mem.downvotes < 6),\n    hots: state.mems.filter((mem)=> mem.upvotes + mem.downvotes > 5),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      memsFetched,\n      updateMem,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(MemsList));\n"]},"metadata":{},"sourceType":"module"}