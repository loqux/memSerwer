{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from 'react-router-dom';\nimport MemsPage from \"./MemsPage\";\n\nconst MemsList = props => {\n  useEffect(() => {\n    const fetched = props.memsFetched();\n  }, []);\n\n  const handleUpvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.upvotes = newMem.upvotes + 1;\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n  if (useLocation().pathname == \"/hot\") {\n    return /*#__PURE__*/React.createElement(MemsPage, {\n      mems: this.props.hots,\n      handleUpvoteMem: handleUpvoteMem,\n      handleDownvoteMem: handleDownvoteMem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(MemsPage, {\n    mems: this.props.mems,\n    handleUpvoteMem: handleUpvoteMem,\n    handleDownvoteMem: handleDownvoteMem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    mems: state.mems.filter(mem => mem.upvotes + mem.downvotes < 6),\n    hots: state.mems.filter(mem => mem.upvotes + mem.downvotes > 5)\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  memsFetched,\n  updateMem\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","useState","useEffect","connect","Mem","withRouter","memsFetched","updateMem","Leyout","Paper","bindActionCreators","useLocation","MemsPage","MemsList","props","fetched","handleUpvoteMem","mem","newMem","upvotes","handleDownvoteMem","downvotes","pathname","hots","mems","mapStateToProps","state","filter","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,6BAAvC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1BZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,OAAO,GAAGD,KAAK,CAACR,WAAN,EAAhB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMU,eAAe,GAAG,MAAOC,GAAP,IAAe;AACrC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACC,OAAP,GAAiB,CAAlC;AACA,UAAML,KAAK,CAACP,SAAN,CAAgBW,MAAhB,CAAN;AACD,GAJD;;AAMA,QAAME,iBAAiB,GAAG,MAAOH,GAAP,IAAe;AACvC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACG,SAAP,GAAmBH,MAAM,CAACG,SAAP,GAAmB,CAAtC;AACA,UAAMP,KAAK,CAACP,SAAN,CAAgBW,MAAhB,CAAN;AACD,GAJD;;AAMA,MAAGP,WAAW,GAAGW,QAAd,IAA0B,MAA7B,EAAoC;AAChC,wBACA,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,IAA3B;AAAiC,MAAA,eAAe,EAAEP,eAAlD;AAAoE,MAAA,iBAAiB,EAAEI,iBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAEE;;AACP,sBAAQ,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,KAAKN,KAAL,CAAWU,IAA3B;AAAiC,IAAA,eAAe,EAAER,eAAlD;AAAoE,IAAA,iBAAiB,EAAEI,iBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AAGA,CAzBD;;AA2BA,MAAMK,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWG,MAAX,CAAmBV,GAAD,IAAQA,GAAG,CAACE,OAAJ,GAAcF,GAAG,CAACI,SAAlB,GAA8B,CAAxD,CADD;AAELE,IAAAA,IAAI,EAAEG,KAAK,CAACF,IAAN,CAAWG,MAAX,CAAmBV,GAAD,IAAQA,GAAG,CAACE,OAAJ,GAAcF,GAAG,CAACI,SAAlB,GAA8B,CAAxD;AAFD,GAAP;AAID,CALD;;AAOA,MAAMO,kBAAkB,GAAIC,QAAD,IACzBnB,kBAAkB,CAChB;AACEJ,EAAAA,WADF;AAEEC,EAAAA;AAFF,CADgB,EAKhBsB,QALgB,CADpB;;AASA,eAAe1B,OAAO,CACpBsB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbvB,UAAU,CAACQ,QAAD,CAHG,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from 'react-router-dom';\nimport MemsPage from \"./MemsPage\";\n\nconst MemsList = (props) => {\n\n  useEffect(() => {\n    const fetched = props.memsFetched();\n  }, []);\n\n  const handleUpvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.upvotes = newMem.upvotes + 1;\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n  if(useLocation().pathname == \"/hot\"){\n      return(\n      <MemsPage mems={this.props.hots} handleUpvoteMem={handleUpvoteMem}  handleDownvoteMem={handleDownvoteMem}/>\n      )}\n return( <MemsPage mems={this.props.mems} handleUpvoteMem={handleUpvoteMem}  handleDownvoteMem={handleDownvoteMem}/>\n    ) \n   \n};\n\nconst mapStateToProps = (state) => {\n  return {\n    mems: state.mems.filter((mem)=> mem.upvotes + mem.downvotes < 6),\n    hots: state.mems.filter((mem)=> mem.upvotes + mem.downvotes > 5),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      memsFetched,\n      updateMem,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(MemsList));\n"]},"metadata":{},"sourceType":"module"}