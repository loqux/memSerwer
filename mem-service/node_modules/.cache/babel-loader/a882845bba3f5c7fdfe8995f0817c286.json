{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Mem from \"./Mem\";\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\n\nconst MemsList = props => {\n  const [mems, setMems] = useState([]);\n  useEffect(() => {\n    const mems = this.props.memsFetched(props.mems);\n    setMems(mems);\n  });\n\n  handleUpvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.upvotes = newMem.upvotes + 1;\n    await props.updateMem(newMem);\n  };\n\n  handleDownvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.downvotes = newMem.downvotes - 1;\n    await props.updateMem(newMem);\n  };\n\n  return /*#__PURE__*/React.createElement(Leyout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    styles: {\n      padding: 20,\n      marginTop: 10,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, this.props.mems.map(mem => /*#__PURE__*/React.createElement(Mem, {\n    key: mem.id,\n    mem: mem,\n    onUpvoteClick: this.handleUpvoteMem,\n    onDownvoteClick: this.handleDownvoteMem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    mems: state.mems\n  };\n};\n\nconst mapDispatchToProps = {\n  memsFetched,\n  updateMem\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","useState","useEffect","connect","Mem","withRouter","bindActionCreators","MemsList","props","mems","setMems","memsFetched","handleUpvoteMem","mem","newMem","upvotes","updateMem","handleDownvoteMem","downvotes","padding","marginTop","marginBottom","map","id","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMO,IAAI,GAAG,KAAKD,KAAL,CAAWG,WAAX,CAAuBH,KAAK,CAACC,IAA7B,CAAb;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAHQ,CAAT;;AAKAG,EAAAA,eAAe,GAAG,MAAOC,GAAP,IAAe;AAC7B,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACC,OAAP,GAAiB,CAAlC;AACA,UAAMP,KAAK,CAACQ,SAAN,CAAgBF,MAAhB,CAAN;AACD,GAJH;;AAMEG,EAAAA,iBAAiB,GAAG,MAAOJ,GAAP,IAAe;AACjC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACI,SAAP,GAAmBJ,MAAM,CAACI,SAAP,GAAmB,CAAtC;AACA,UAAMV,KAAK,CAACQ,SAAN,CAAgBF,MAAhB,CAAN;AACD,GAJD;;AAMF,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE;AAAEK,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,SAAS,EAAE,EAA1B;AAA8BC,MAAAA,YAAY,EAAE;AAA5C,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG,KAAKb,KAAL,CAAWC,IAAX,CAAgBa,GAAhB,CAAqBT,GAAD,iBACnB,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAACU,EADX;AAEE,IAAA,GAAG,EAAEV,GAFP;AAGE,IAAA,aAAa,EAAE,KAAKD,eAHtB;AAIE,IAAA,eAAe,EAAE,KAAKK,iBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAHH,CADA,CADJ;AAgBD,CApCH;;AAsCE,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLhB,IAAAA,IAAI,EAAEgB,KAAK,CAAChB;AADP,GAAP;AAGD,CAJD;;AAKA,MAAMiB,kBAAkB,GAAG;AAAEf,EAAAA,WAAF;AAAeK,EAAAA;AAAf,CAA3B;AAGA,eAAeb,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,UAAU,CAACE,QAAD,CAAvD,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Mem from \"./Mem\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst MemsList = (props) => {\r\n    const [mems, setMems] = useState([]);\r\n  \r\n    useEffect(()=>{\r\n        const mems = this.props.memsFetched(props.mems);\r\n        setMems(mems);\r\n    });\r\n\r\n    handleUpvoteMem = async (mem) => {\r\n        let newMem = { ...mem };\r\n        newMem.upvotes = newMem.upvotes + 1;\r\n        await props.updateMem(newMem);\r\n      };\r\n    \r\n      handleDownvoteMem = async (mem) => {\r\n        let newMem = { ...mem };\r\n        newMem.downvotes = newMem.downvotes - 1;\r\n        await props.updateMem(newMem);\r\n      };\r\n  \r\n    return (\r\n        <Leyout>\r\n        <Paper\r\n          styles={{ padding: 20, marginTop: 10, marginBottom: 10 }}\r\n        >\r\n          {this.props.mems.map((mem) => (\r\n            <Mem\r\n              key={mem.id}\r\n              mem={mem}\r\n              onUpvoteClick={this.handleUpvoteMem}\r\n              onDownvoteClick={this.handleDownvoteMem}\r\n            />\r\n          ))}\r\n        </Paper>\r\n      </Leyout>\r\n    );\r\n  };\r\n  \r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      mems: state.mems,\r\n    };\r\n  };\r\n  const mapDispatchToProps = { memsFetched, updateMem };\r\n  \r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));\r\n  "]},"metadata":{},"sourceType":"module"}