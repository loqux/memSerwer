{"ast":null,"code":"import { FETCH_MEMS_SUCCESS, UPDATE_MEM, ADD_MEM } from \"../actions/actionsType\";\nconst INIT_STATE = {\n  mems: [],\n  hots: [],\n  regulars: []\n};\n\nconst mems = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_MEMS_SUCCESS:\n      return { ...state,\n        mems: [...action.payload],\n        hots: action.payload.filter(mem => mem.upvotes + mem.downvotes > 5),\n        regulars: action.payload.filter(mem => mem.upvotes + mem.downvotes < 6)\n      };\n\n    case UPDATE_MEM:\n      return { ...state,\n        mems: state.map(mem => mem.id === action.payload.id ? action.payload : mem)\n      };\n\n    case ADD_MEM:\n      return { ...state,\n        mems: [...state, { ...action.peyload\n        }]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default mems;","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/redux/reducer/memsReducer.js"],"names":["FETCH_MEMS_SUCCESS","UPDATE_MEM","ADD_MEM","INIT_STATE","mems","hots","regulars","state","action","type","payload","filter","mem","upvotes","downvotes","map","id","peyload"],"mappings":"AAAA,SACEA,kBADF,EAEEC,UAFF,EAGEC,OAHF,QAIO,wBAJP;AAMA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,IAAI,EAAC,EAFY;AAGjBC,EAAAA,QAAQ,EAAC;AAHQ,CAAnB;;AAMA,MAAMF,IAAI,GAAG,CAACG,KAAK,GAAGJ,UAAT,EAAqBK,MAArB,KAAgC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,kBAAL;AACE,aAAO,EAAC,GAAGO,KAAJ;AACLH,QAAAA,IAAI,EAAE,CAAC,GAAGI,MAAM,CAACE,OAAX,CADD;AAELL,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAuBC,GAAD,IAAQA,GAAG,CAACC,OAAJ,GAAcD,GAAG,CAACE,SAAlB,GAA8B,CAA5D,CAFD;AAGPR,QAAAA,QAAQ,EAAEE,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAuBC,GAAD,IAAQA,GAAG,CAACC,OAAJ,GAAcD,GAAG,CAACE,SAAlB,GAA8B,CAA5D;AAHH,OAAP;;AAIF,SAAKb,UAAL;AACE,aAAM,EAAC,GAAGM,KAAJ;AAAWH,QAAAA,IAAI,EAAEG,KAAK,CAACQ,GAAN,CAAWH,GAAD,IAC/BA,GAAG,CAACI,EAAJ,KAAWR,MAAM,CAACE,OAAP,CAAeM,EAA1B,GAA+BR,MAAM,CAACE,OAAtC,GAAgDE,GAD3B;AAAjB,OAAN;;AAGF,SAAKV,OAAL;AACE,aAAM,EAAC,GAAGK,KAAJ;AAAUH,QAAAA,IAAI,EAAE,CAAC,GAAGG,KAAJ,EAAW,EAAE,GAAGC,MAAM,CAACS;AAAZ,SAAX;AAAhB,OAAN;;AACF;AACE,aAAOV,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAeH,IAAf","sourcesContent":["import {\r\n  FETCH_MEMS_SUCCESS,\r\n  UPDATE_MEM,\r\n  ADD_MEM,\r\n} from \"../actions/actionsType\";\r\n\r\nconst INIT_STATE = {\r\n  mems: [],\r\n  hots:[],\r\n  regulars:[],\r\n};\r\n\r\nconst mems = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_MEMS_SUCCESS:\r\n      return {...state,\r\n        mems: [...action.payload],\r\n        hots: action.payload.filter((mem)=> mem.upvotes + mem.downvotes > 5),\r\n      regulars: action.payload.filter((mem)=> mem.upvotes + mem.downvotes < 6)};\r\n    case UPDATE_MEM:\r\n      return{...state, mems: state.map((mem) =>\r\n        mem.id === action.payload.id ? action.payload : mem\r\n      )};\r\n    case ADD_MEM:\r\n      return{...state,mems: [...state, { ...action.peyload }]};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mems;\r\n"]},"metadata":{},"sourceType":"module"}