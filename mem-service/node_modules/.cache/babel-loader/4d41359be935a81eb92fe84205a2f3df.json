{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from \"react-router-dom\";\nimport Mem from \"./Mem\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst MemsList = props => {\n  const [isUpdated, setUpdated] = useState();\n  useEffect(() => {\n    props.memsFetched();\n  }, [isUpdated]);\n\n  const handleUpvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.upvotes = newMem.upvotes + 1;\n    setUpdated(newMem);\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.downvotes = newMem.downvotes - 1;\n    setUpdated(newMem);\n    await props.updateMem(newMem);\n  };\n\n  if (useLocation().pathname === \"/hot\") {\n    return /*#__PURE__*/React.createElement(Leyout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      styles: {\n        padding: 20,\n        marginTop: 10,\n        marginBottom: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, props.mems.hots.map(mem => /*#__PURE__*/React.createElement(Mem, {\n      key: mem.id,\n      mem: mem,\n      onUpvoteClick: handleUpvoteMem,\n      onDownvoteClick: handleDownvoteMem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  return /*#__PURE__*/React.createElement(Leyout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    styles: {\n      padding: 20,\n      marginTop: 10,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, props.mems.regulars.map(mem => /*#__PURE__*/React.createElement(Mem, {\n    key: mem.id,\n    mem: mem,\n    onUpvoteClick: handleUpvoteMem,\n    onDownvoteClick: handleDownvoteMem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    mems: state.mems\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  memsFetched,\n  updateMem\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","useEffect","useState","connect","withRouter","memsFetched","updateMem","bindActionCreators","useLocation","Mem","Leyout","Paper","MemsList","props","isUpdated","setUpdated","handleUpvoteMem","mem","newMem","upvotes","handleDownvoteMem","downvotes","pathname","padding","marginTop","marginBottom","mems","hots","map","id","regulars","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from \"react-router-dom\";\nimport Mem from \"./Mem\";\nimport Leyout from \"./Layouts/index\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst MemsList = (props) => {\n  const [isUpdated, setUpdated] = useState();\n\n  useEffect(() => {\n    props.memsFetched();\n  }, [isUpdated]);\n\n  const handleUpvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.upvotes = newMem.upvotes + 1;\n    setUpdated(newMem);\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.downvotes = newMem.downvotes - 1;\n    setUpdated(newMem);\n    await props.updateMem(newMem);\n  };\n\n  if (useLocation().pathname === \"/hot\") {\n    return (\n        <Leyout>\n        <Paper styles={{ padding: 20, marginTop: 10, marginBottom: 10 }}>\n          {props.mems.hots.map((mem) => (\n            <Mem \n            key={mem.id}\n              mem={mem}\n              onUpvoteClick={handleUpvoteMem}\n              onDownvoteClick={handleDownvoteMem}\n            />\n          ))}\n        </Paper>\n      </Leyout>\n    );\n  }\n  return (\n    <Leyout>\n    <Paper styles={{ padding: 20, marginTop: 10, marginBottom: 10 }}>\n      {props.mems.regulars.map((mem) => (\n        <Mem \n        key={mem.id}\n          mem={mem}\n          onUpvoteClick={handleUpvoteMem}\n          onDownvoteClick={handleDownvoteMem}\n        />\n      ))}\n    </Paper>\n  </Leyout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    mems: state.mems,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      memsFetched,\n      updateMem,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(MemsList));\n"]},"metadata":{},"sourceType":"module"}