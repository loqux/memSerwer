{"ast":null,"code":"import * as action from \"./actionsType\";\nimport * as memsApi from \"../../api/memsApi\";\nexport function updateMemSuccess(mem) {\n  return {\n    type: action.UPDATE_MEM,\n    payload: mem\n  };\n}\nexport function addMemSuccess(mem) {\n  return {\n    type: action.ADD_MEM,\n    payload: mem\n  };\n}\nexport function memsFetchedSuccess(mems) {\n  return {\n    type: action.FETCH_MEMS_SUCCESS,\n    payload: mems\n  };\n}\nexport function memsFetched() {\n  return async function (dispatch) {\n    return await memsApi.getMems().then(mems => {\n      dispatch(memsFetchedSuccess(mems));\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function updateMem(mem) {\n  return function (dispatch) {\n    return memsApi.updateMem(mem).then(changeMem => {\n      dispatch(updateMemSuccess(changeMem));\n    }).catch(error => {\n      throw error;\n    });\n  };\n}\nexport function addMem(mem) {\n  return function (dispatch) {\n    return memsApi.postMem(mem).then(addedMem => {\n      dispatch(addMemSuccess(addedMem));\n    }).catch(error => {\n      throw error;\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/redux/actions/memActions.js"],"names":["action","memsApi","updateMemSuccess","mem","type","UPDATE_MEM","payload","addMemSuccess","ADD_MEM","memsFetchedSuccess","mems","FETCH_MEMS_SUCCESS","memsFetched","dispatch","getMems","then","catch","error","updateMem","changeMem","addMem","postMem","addedMem"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,eAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,MAAM,CAACK,UADR;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASI,aAAT,CAAuBJ,GAAvB,EAA4B;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,MAAM,CAACQ,OADR;AAELF,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASM,kBAAT,CAA4BC,IAA5B,EAAkC;AACvC,SAAO;AACLN,IAAAA,IAAI,EAAEJ,MAAM,CAACW,kBADR;AAELL,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID;AAED,OAAO,SAASE,WAAT,GAAuB;AAC5B,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/B,WAAO,MAAMZ,OAAO,CACjBa,OADU,GAEVC,IAFU,CAEJL,IAAD,IAAU;AACdG,MAAAA,QAAQ,CAACJ,kBAAkB,CAACC,IAAD,CAAnB,CAAR;AACD,KAJU,EAKVM,KALU,CAKHC,KAAD,IAAW;AAChB,YAAMA,KAAN;AACD,KAPU,CAAb;AAQD,GATD;AAUD;AAED,OAAO,SAASC,SAAT,CAAmBf,GAAnB,EAAwB;AAC7B,SAAO,UAAUU,QAAV,EAAoB;AACzB,WAAOZ,OAAO,CACXiB,SADI,CACMf,GADN,EAEJY,IAFI,CAEEI,SAAD,IAAe;AACnBN,MAAAA,QAAQ,CAACX,gBAAgB,CAACiB,SAAD,CAAjB,CAAR;AACD,KAJI,EAKJH,KALI,CAKGC,KAAD,IAAW;AAChB,YAAMA,KAAN;AACD,KAPI,CAAP;AAQD,GATD;AAUD;AAED,OAAO,SAASG,MAAT,CAAgBjB,GAAhB,EAAqB;AAC1B,SAAO,UAAUU,QAAV,EAAoB;AACzB,WAAOZ,OAAO,CACXoB,OADI,CACIlB,GADJ,EAEJY,IAFI,CAEEO,QAAD,IAAc;AAClBT,MAAAA,QAAQ,CAACN,aAAa,CAACe,QAAD,CAAd,CAAR;AACD,KAJI,EAKJN,KALI,CAKGC,KAAD,IAAW;AAChB,YAAMA,KAAN;AACD,KAPI,CAAP;AAQD,GATD;AAUD","sourcesContent":["import * as action from \"./actionsType\";\nimport * as memsApi from \"../../api/memsApi\";\n\nexport function updateMemSuccess(mem) {\n  return {\n    type: action.UPDATE_MEM,\n    payload: mem,\n  };\n}\n\nexport function addMemSuccess(mem) {\n  return {\n    type: action.ADD_MEM,\n    payload: mem,\n  };\n}\n\nexport function memsFetchedSuccess(mems) {\n  return {\n    type: action.FETCH_MEMS_SUCCESS,\n    payload: mems,\n  };\n}\n\nexport function memsFetched() {\n  return async function (dispatch) {\n    return await memsApi\n      .getMems()\n      .then((mems) => {\n        dispatch(memsFetchedSuccess(mems));\n      })\n      .catch((error) => {\n        throw error;\n      });\n  };\n}\n\nexport function updateMem(mem) {\n  return function (dispatch) {\n    return memsApi\n      .updateMem(mem)\n      .then((changeMem) => {\n        dispatch(updateMemSuccess(changeMem));\n      })\n      .catch((error) => {\n        throw error;\n      });\n  };\n}\n\nexport function addMem(mem) {\n  return function (dispatch) {\n    return memsApi\n      .postMem(mem)\n      .then((addedMem) => {\n        dispatch(addMemSuccess(addedMem));\n      })\n      .catch((error) => {\n        throw error;\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}