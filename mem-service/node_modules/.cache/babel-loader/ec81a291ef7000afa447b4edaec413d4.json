{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\AddMem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addMem, memsFetched } from \"../redux/actions/actions\";\nimport MemForm from \"./MemForm\";\nimport { newMem } from \"../api/newMem\";\nexport function AddMem({\n  mems,\n  addMem,\n  memsFetched,\n  ...props\n}) {\n  const [mem, setCourse] = useState({ ...props.mem\n  });\n  useEffect(() => {\n    if (mems.length === 0) {\n      memsFetched();\n    } else {\n      setCourse({ ...props.mem\n      });\n    }\n  }, [props.mem]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCourse(prevMem => ({ ...prevMem,\n      [name]: value\n    }));\n  }\n\n  function handleSave(event) {\n    event.preventDefault();\n    console.log(mem);\n    addMem(mem);\n  }\n\n  return /*#__PURE__*/React.createElement(MemForm, {\n    mem: mem,\n    onChange: handleChange,\n    onSave: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const mem = newMem;\n  return {\n    mem,\n    mems: state.mems\n  };\n}\n\nconst mapDispatchToProps = {\n  addMem,\n  memsFetched\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMem);","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/AddMem.js"],"names":["React","useEffect","useState","connect","addMem","memsFetched","MemForm","newMem","AddMem","mems","props","mem","setCourse","length","handleChange","event","name","value","target","prevMem","handleSave","preventDefault","console","log","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,0BAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,OAAO,SAASC,MAAT,CAAgB;AACrBC,EAAAA,IADqB;AAErBL,EAAAA,MAFqB;AAGrBC,EAAAA,WAHqB;AAIrB,KAAGK;AAJkB,CAAhB,EAKJ;AACD,QAAM,CAACC,GAAD,EAAMC,SAAN,IAAmBV,QAAQ,CAAC,EAAE,GAAGQ,KAAK,CAACC;AAAX,GAAD,CAAjC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAI,CAACI,MAAL,KAAgB,CAApB,EAAuB;AACnBR,MAAAA,WAAW;AACd,KAFD,MAEO;AACLO,MAAAA,SAAS,CAAC,EAAE,GAAGF,KAAK,CAACC;AAAX,OAAD,CAAT;AACD;AACA,GANM,EAMJ,CAACD,KAAK,CAACC,GAAP,CANI,CAAT;;AAQA,WAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAN,IAAAA,SAAS,CAACO,OAAO,KAAK,EACpB,GAAGA,OADiB;AAEpB,OAACH,IAAD,GAAQC;AAFY,KAAL,CAAR,CAAT;AAID;;AAED,WAASG,UAAT,CAAoBL,KAApB,EAA2B;AACzBA,IAAAA,KAAK,CAACM,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACAP,IAAAA,MAAM,CAACO,GAAD,CAAN;AAAa;;AAEf,sBACE,oBAAC,OAAD;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,QAAQ,EAAEG,YAFZ;AAGE,IAAA,MAAM,EAAEM,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD;;AAED,SAASI,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACxC,QAAMf,GAAG,GAAGJ,MAAZ;AACA,SAAO;AACLI,IAAAA,GADK;AAELF,IAAAA,IAAI,EAAEgB,KAAK,CAAChB;AAFP,GAAP;AAID;;AAED,MAAMkB,kBAAkB,GAAG;AAC1BvB,EAAAA,MAD0B;AAE1BC,EAAAA;AAF0B,CAA3B;AAKA,eAAeF,OAAO,CACpBqB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbnB,MAHa,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {addMem, memsFetched} from \"../redux/actions/actions\";\r\nimport MemForm from \"./MemForm\";\r\nimport { newMem } from \"../api/newMem\";\r\n\r\nexport function AddMem({\r\n  mems,\r\n  addMem,\r\n  memsFetched,\r\n  ...props\r\n}) {\r\n  const [mem, setCourse] = useState({ ...props.mem });\r\n\r\n  useEffect(() => {\r\n    if (mems.length === 0) {\r\n        memsFetched();\r\n    } else {\r\n      setCourse({ ...props.mem });\r\n    }\r\n    }, [props.mem]);\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setCourse(prevMem => ({\r\n      ...prevMem,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  function handleSave(event) {\r\n    event.preventDefault();\r\n    console.log(mem);\r\n    addMem(mem);}\r\n\r\n  return  (\r\n    <MemForm\r\n      mem={mem}\r\n      onChange={handleChange}\r\n      onSave={handleSave}\r\n    />\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const mem = newMem;\r\n  return {\r\n    mem,\r\n    mems: state.mems,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n addMem,\r\n memsFetched\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddMem);\r\n"]},"metadata":{},"sourceType":"module"}