{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amielnic\\\\Desktop\\\\angular\\\\mem-serwice\\\\mem-service\\\\src\\\\component\\\\MemsList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from \"react-router-dom\";\nimport MemsPage from \"./MemsPage\";\n\nconst MemsList = props => {\n  const [isUpdated, setUpdated] = useState(false);\n  const [actualMem, setMems] = useState([]);\n  useEffect(() => {\n    props.memsFetched();\n  }, [isUpdated]);\n\n  const handleUpvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.upvotes = newMem.upvotes + 1;\n    setUpdated(newMem);\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async mem => {\n    let newMem = { ...mem\n    };\n    newMem.downvotes = newMem.downvotes - 1;\n    setUpdated(newMem);\n    await props.updateMem(newMem);\n  }; //   if (useLocation().pathname === \"/hot\") {\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, useLocation().pathname === \"/hot\" ? setMems(props.mems.hots) : setMems(props.mems.regulars), /*#__PURE__*/React.createElement(MemsPage, {\n    mems: actualMem,\n    handleUpvoteMem: handleUpvoteMem,\n    handleDownvoteMem: handleDownvoteMem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), \" \"); //   }\n  //   return (\n  //     <MemsPage\n  //       mems={props.mems.regulars}\n  //       handleUpvoteMem={handleUpvoteMem}\n  //       handleDownvoteMem={handleDownvoteMem}\n  //     />\n  //   );\n};\n\nconst mapStateToProps = state => {\n  return {\n    mems: state.mems\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  memsFetched,\n  updateMem\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MemsList));","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/component/MemsList.js"],"names":["React","useEffect","useState","connect","withRouter","memsFetched","updateMem","bindActionCreators","useLocation","MemsPage","MemsList","props","isUpdated","setUpdated","actualMem","setMems","handleUpvoteMem","mem","newMem","upvotes","handleDownvoteMem","downvotes","pathname","mems","hots","regulars","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,6BAAvC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACY,SAAD,EAAYC,OAAZ,IAAuBb,QAAQ,CAAC,EAAD,CAArC;AAEFD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACN,WAAN;AACD,GAFQ,EAEN,CAACO,SAAD,CAFM,CAAT;;AAIA,QAAMI,eAAe,GAAG,MAAOC,GAAP,IAAe;AACrC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACC,OAAP,GAAiB,CAAlC;AACAN,IAAAA,UAAU,CAACK,MAAD,CAAV;AACA,UAAMP,KAAK,CAACL,SAAN,CAAgBY,MAAhB,CAAN;AACD,GALD;;AAOA,QAAME,iBAAiB,GAAG,MAAOH,GAAP,IAAe;AACvC,QAAIC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAb;AACAC,IAAAA,MAAM,CAACG,SAAP,GAAmBH,MAAM,CAACG,SAAP,GAAmB,CAAtC;AACAR,IAAAA,UAAU,CAACK,MAAD,CAAV;AACA,UAAMP,KAAK,CAACL,SAAN,CAAgBY,MAAhB,CAAN;AACH,GALC,CAf0B,CAsB5B;;;AACI,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFV,WAAW,GAAGc,QAAd,KAA2B,MAA5B,GAAsCP,OAAO,CAACJ,KAAK,CAACY,IAAN,CAAWC,IAAZ,CAA7C,GAAgET,OAAO,CAACJ,KAAK,CAACY,IAAN,CAAWE,QAAZ,CADpE,eAGE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEX,SADR;AAEE,IAAA,eAAe,EAAEE,eAFnB;AAGE,IAAA,iBAAiB,EAAEI,iBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,MADA,CAvBwB,CAiC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAzCD;;AA2CA,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLJ,IAAAA,IAAI,EAAEI,KAAK,CAACJ;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,IACzBtB,kBAAkB,CAChB;AACEF,EAAAA,WADF;AAEEC,EAAAA;AAFF,CADgB,EAKhBuB,QALgB,CADpB;;AASA,eAAe1B,OAAO,CACpBuB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbxB,UAAU,CAACM,QAAD,CAHG,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { memsFetched, updateMem } from \"../redux/actions/memActions\";\nimport { bindActionCreators } from \"redux\";\nimport { useLocation } from \"react-router-dom\";\nimport MemsPage from \"./MemsPage\";\n\nconst MemsList = (props) => {\n    const [isUpdated, setUpdated] = useState(false);\n    const [actualMem, setMems] = useState([]);\n\n  useEffect(() => {\n    props.memsFetched();\n  }, [isUpdated]);\n\n  const handleUpvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.upvotes = newMem.upvotes + 1;\n    setUpdated(newMem);\n    await props.updateMem(newMem);\n  };\n\n  const handleDownvoteMem = async (mem) => {\n    let newMem = { ...mem };\n    newMem.downvotes = newMem.downvotes - 1;\n    setUpdated(newMem);\n    await props.updateMem(newMem);\n};\n\n//   if (useLocation().pathname === \"/hot\") {\n    return (\n    <div>\n{(useLocation().pathname === \"/hot\") ? setMems(props.mems.hots): setMems(props.mems.regulars)}\n\n      <MemsPage\n        mems={actualMem}\n        handleUpvoteMem={handleUpvoteMem}\n        handleDownvoteMem={handleDownvoteMem}\n      /> </div>\n    );\n//   }\n//   return (\n//     <MemsPage\n//       mems={props.mems.regulars}\n//       handleUpvoteMem={handleUpvoteMem}\n//       handleDownvoteMem={handleDownvoteMem}\n//     />\n//   );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    mems: state.mems,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      memsFetched,\n      updateMem,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(MemsList));\n"]},"metadata":{},"sourceType":"module"}