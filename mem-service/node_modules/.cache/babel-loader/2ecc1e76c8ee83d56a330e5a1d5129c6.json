{"ast":null,"code":"import * as action from \"./actionsType\";\nimport * as memsApi from \"../../api/memsApi\";\nexport function upvote(vote) {\n  return {\n    type: action.UPVOTE,\n    vote\n  };\n}\nexport function downvote(vote) {\n  return {\n    type: action.DOWNVOTE,\n    vote\n  };\n}\nexport function memsFetchedSuccess(mems) {\n  return {\n    type: action.FETCH_MEMS_SUCCESS,\n    mems\n  };\n}\nexport function memsFetched() {\n  return function (dispatch) {\n    return memsApi.getMems().thern(mems => {\n      dispatch(memsFetchedSuccess(mems));\n    }).catch(error => {\n      throw error;\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/amielnic/Desktop/angular/mem-serwice/mem-service/src/redux/actions/actions.js"],"names":["action","memsApi","upvote","vote","type","UPVOTE","downvote","DOWNVOTE","memsFetchedSuccess","mems","FETCH_MEMS_SUCCESS","memsFetched","dispatch","getMems","thern","catch","error"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,eAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AAEA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAEJ,MAAM,CAACK,MADR;AAELF,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASG,QAAT,CAAkBH,IAAlB,EAAwB;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEJ,MAAM,CAACO,QADR;AAELJ,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASK,kBAAT,CAA4BC,IAA5B,EAAkC;AACvC,SAAO;AAAEL,IAAAA,IAAI,EAAEJ,MAAM,CAACU,kBAAf;AAAmCD,IAAAA;AAAnC,GAAP;AACD;AAED,OAAO,SAASE,WAAT,GAAsB;AAC3B,SAAO,UAASC,QAAT,EAAmB;AACxB,WAAOX,OAAO,CAACY,OAAR,GAAkBC,KAAlB,CAAwBL,IAAI,IAAI;AACrCG,MAAAA,QAAQ,CAACJ,kBAAkB,CAACC,IAAD,CAAnB,CAAR;AACD,KAFM,EAEJM,KAFI,CAEEC,KAAK,IAAI;AAChB,YAAMA,KAAN;AACD,KAJM,CAAP;AAKD,GAND;AAOD","sourcesContent":["import * as action from \"./actionsType\";\nimport * as memsApi from \"../../api/memsApi\";\n\nexport function upvote(vote) {\n  return {\n    type: action.UPVOTE,\n    vote\n  };\n}\n\nexport function downvote(vote) {\n  return {\n    type: action.DOWNVOTE,\n    vote\n  };\n}\n\nexport function memsFetchedSuccess(mems) {\n  return { type: action.FETCH_MEMS_SUCCESS, mems };\n}\n\nexport function memsFetched(){\n  return function(dispatch) {\n    return memsApi.getMems().thern(mems => {\n      dispatch(memsFetchedSuccess(mems));\n    }).catch(error => {\n      throw error;\n    })\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}